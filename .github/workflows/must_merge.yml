name: Merge to Main

on:
  push:
    branches:
      - '*'
    paths-ignore:
      - '.github/workflows/must_merge.yml' # 이 파일은 workflow 파일의 이름에 따라 조정하세요.

jobs:
  merge_to_main:
    runs-on: ubuntu-latest

    steps:
      - name: Check if main branch
        run: |
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            # .github/workflows 폴더는 제외
            if [[ "${GITHUB_WORKSPACE}" != *".github/workflows"* ]]; then
              echo "main branch에 직접 업로드 시도"
              exit 1
            fi
          fi

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Merge to Main
        run: |
          # 병합 작업을 수행하고 main 브랜치로 푸시하는 로직을 여기에 작성
          # 예를 들어, 다음 명령어를 사용하여 브랜치를 main으로 병합하고 푸시할 수 있습니다:
          # git checkout main
          # git merge $GITHUB_REF
          # git push

      - name: Create Issue on Failure
        if: failure()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data } = await github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '메인 브랜치 푸시 오류',
              body: 'main 브랜치로 직접 푸시할 수 없습니다. 개인 branch에 업로드 후 merge request를 하세요.',
            });
            console.log(`Created issue ${data.number}`);
